plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'maven'
	id "com.jfrog.artifactory" version "4.21.0"
	id "com.diffplug.spotless" version "5.5.1"
	id "maven-publish"
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'com.oddprints'
version = '4.0.2'
sourceCompatibility = '1.8'

jar {
	manifest {
		attributes 'Implementation-Title': 'prodigi-java-sdk',
				'Implementation-Version': archiveVersion
	}
    enabled = true
	archiveClassifier = '' // use empty string instead of "plain"
}

bootJar {
	archiveClassifier = 'boot'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.6.7'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
	testImplementation 'io.projectreactor:reactor-test:3.4.16'
	compile 'com.github.ben-manes.caffeine:caffeine:2.5.5'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.2'
}

spotless {
	java {
		googleJavaFormat().aosp()
	}
}

test {
	useJUnitPlatform()
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
	archiveClassifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	archiveClassifier = 'javadoc'
	from javadoc.destinationDir
}

artifactoryPublish {
	dependsOn build, sourcesJar, javadocJar
}

// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar
	archives javadocJar
}

configurations {
	published
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/OddPrints/prodigi-java-sdk")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			from(components.java)
		}
	}
}